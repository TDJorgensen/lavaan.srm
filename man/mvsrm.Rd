% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvSRM.R
\name{mvsrm}
\alias{mvsrm}
\title{MCMC estimation of multivariate SRM}
\usage{
mvsrm(
  data,
  rr.vars = NULL,
  IDout,
  IDin,
  IDgroup = NULL,
  fixed.groups = FALSE,
  group_data = NULL,
  case_data = NULL,
  block = NULL,
  return_stan_data = FALSE,
  return_stanfit = FALSE,
  saveComp = FALSE,
  ...
)
}
\arguments{
\item{data}{Dyad-level \code{data.frame} containing round-robin variables, as
well as symmetric dyad-level variables (i.e., constant within dyads).
Must be in long format (one column per variable, 2 rows per dyad) and
contain case-level ID variables. Cases are often individual subjects,
but could be households or countries.  Can also contain group-level ID
(named by the \verb{IDgroup=} argument), but cannot contain any other types of
variable.  Case-level and group-level covariates are passed to other
arguments.
\emph{Optionally}, \code{data} can be a 3-dimensional
\code{array} (for 1 round-robin group) or a \code{list} of such arrays.  The first
2 dimensions of the \code{array}(s) must be of equal \code{length} (representing the
same people in rows and columns of a sociomatrix), and every "slice" of
the third dimension is a different round-robin variable (so the \code{dimnames}
attribute must have names for the third dimension).}

\item{rr.vars}{Optional \code{character} indicating a subset of columns in \code{data}
to fit the mvSRM to.  By default (\code{NULL}), all columns are analyzed.}

\item{IDout}{\code{character} indicating the name of the case-level ID variable
in \code{data} that represents the out-going effect (ego, actor, or perceiver)}

\item{IDin}{\code{character} indicating the name of the case-level ID variable
in \code{data} that represents the in-coming effect (alter, partner, or target)}

\item{IDgroup}{Optional \code{character} indicating the name of the ID variable
in \code{data} that distinguishes between multiple round-robin groups}

\item{fixed.groups}{\code{logical} indicating whether means of multiple
round-robin groups should be treated as fixed effects.  When \code{TRUE},
means will be "partialed out" by group-mean centering each round-robin
variable, as well as any case-level covariates in \code{case_data}.}

\item{group_data}{Optional \code{data.frame} containing group-level covariates.
Must contain the same \code{IDgroup} variable as \code{data}.
Ignored when \code{fixed.groups=TRUE}
Not used yet.}

\item{case_data}{Optional \code{data.frame} containing case-level covariates.
Must contain a variable named \code{ID}, with \strong{all the same values} that
appear in \code{data[[IDout]]} and \code{data[[IDin]]} when \code{is.data.frame(data)};
or all the same \code{dimnames(data)[1:2]} when \verb{data=} is a matrix/array (or
all \code{dimnames()} when \verb{data=} is a list of arrays).
Not used yet.}

\item{block}{Optional \code{character} indicating the name of a case-level
grouping variable in \code{data} that distinguishes between multiple
round-robin groups.
Not used yet.}

\item{return_stan_data}{\code{logical}. Set \code{TRUE} to return the list passed to
\code{rstan::sampling(data=)}. Helpful for creating reprex when Stan fails.}

\item{return_stanfit}{\code{logical}. Set \code{TRUE} to return the
\code{\linkS4class{stanfit}}-class object, without making it a
\code{\linkS4class{mvSRM}}-class object.}

\item{saveComp}{\code{logical} indicating whether to save the posterior samples
of group- (if relevant), case-, and dyad-level components of each variable
in \verb{data=} (and decomposed \verb{case_data=}, if relevant)}

\item{...}{Arguments passed to \code{\link[rstan:stanmodel-method-sampling]{rstan::sampling()}} (e.g. iter, chains).}
}
\value{
An object of \code{\linkS4class{mvSRM}}, which inherits from a
\code{\linkS4class{stanfit}} object returned by \code{\link[rstan:stanmodel-method-sampling]{rstan::sampling()}}.
}
\description{
Estimate a multivariate social relations model (mvSRM; Nestler,
\href{https://doi.org/10.3102/1076998617741106}{2018}) using the Stan
(Carpenter et al., \href{https://doi.org/10.18637/jss.v076.i01}{2017}) software.
Stan uses MCMC estimation, enabling Bayesian inferential methods for SRM
parameters.  In addition to extending the mvSRM with level-specific
covariates (including the round-robin-group level of analysis), this result
provides Stage-1 estimates to use as input for a 2-stage estimator of the
social relations structural equation model (SR-SEM; Nestler et al.,
\href{https://doi.org/10.1007/s11336-020-09728-z}{2020}).
}
\examples{


\dontrun{
## use example data from the ?srm::srm help page
data(data.srm01, package="srm")
## do NOT use the same case-level IDs across groups
data.srm01$egoID   <- paste(data.srm01$Group, data.srm01$Actor  , sep = "_")
data.srm01$alterID <- paste(data.srm01$Group, data.srm01$Partner, sep = "_")

srmOut <- mvsrm(data = data.srm01, rr.vars = paste0("Wert", 1:3),
                IDout = "egoID", IDin = "alterID", IDgroup = "Group",
                ## rstan::sampling() arguments to run this quickly
                chains = 2, iter = 20, seed = 12345,
                cores = ifelse(parallel::detectCores() < 3L, 1L, 2L))


## posterior means (default) and central (default) credible intervals
## of round-robin variable SDs and correlations (default)
summary(srmOut)

## round-robin variable means are always a group-level statistic
summary(srmOut, srm.param = "mean")

## other point estimates from posterior
summary(srmOut, srm.param = "mean", posterior.est = "median",
        ## choose 99\% highest-density uncertainty intervals, overwrite
        interval = "hdi", credMass = .99)

## for the mode, other arguments passed to modeest::mlv()
summary(srmOut, srm.param = "mean",
        posterior.est = "mode", method = "shorth")

## SDs & correlations of group effects
summary(srmOut, component = "group", interval = NULL) # no intervals


## group-mean centered results (no group-level effects)
gmcOut <- mvsrm(data = data.srm01, rr.vars = paste0("Wert", 1:3),
                IDout = "egoID", IDin = "alterID", IDgroup = "Group",
                fixed.groups = TRUE,
                chains = 2, iter = 20, seed = 12345,
                cores = ifelse(parallel::detectCores() < 3L, 1L, 2L))
summary(gmcOut)


## single round-robin group: no group-level random effects or (co)variances
g1out <- mvsrm(data = data.srm01[data.srm01$Group == 1,],
               rr.vars = paste0("Wert", 1:3),      # still an option:
               IDout = "egoID", IDin = "alterID",  # fixed.groups = TRUE,
               chains = 2, iter = 20, seed = 12345,
               cores = ifelse(parallel::detectCores() < 3L, 1L, 2L))
summary(g1out)
summary(g1out, srm.param = "mean") # available unless fixed.groups = TRUE
}

}
\references{
Carpenter, B., Gelman, A., Hoffman, M. D., Lee, D., Goodrich, B.,
Betancourt, M., ... & Riddell, A. (2017).
Stan: A probabilistic programming language.
\emph{Journal of Statistical Software, 76}(1).
\url{https://doi.org/10.18637/jss.v076.i01}

Nestler, S. (2018). Likelihood estimation of the multivariate social
relations model. \emph{Journal of Educational and Behavioral Statistics, 43}(4),
387--406. \url{https://doi.org/10.3102/1076998617741106}

Nestler, S., LÃ¼dtke, O., & Robitzsch, A. (2020). Maximum likelihood
estimation of a social relations structural equation model.
\emph{Psychometrika, 85}(4), 870--889.
\url{https://doi.org/10.1007/s11336-020-09728-z}
}
\seealso{
\code{\linkS4class{mvSRM}}
}
